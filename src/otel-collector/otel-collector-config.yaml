# Data sources: traces, metrics, logs
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: :4317
      # http:
      #   endpoint: 0.0.0.0:4318


exporters:
  # debug:
  #   verbosity: detailed

  otlp/tempo:
    endpoint: tempo:4317
    tls:
      insecure: true

  otlp/oteltui:
    endpoint: oteltui:4317
    tls:
      insecure: true


  otlphttp/loki:
    logs_endpoint: http://loki:3100/otlp/v1/logs
    tls:
      insecure: true

  # loki:
  #   endpoint: http://loki:3100/loki/api/v1/push
  #   default_labels_enabled:
  #     exporter: true
  #     job: true
  #   tls:
  #     insecure: true


  otlphttp/prometheus:
    metrics_endpoint: http://prometheus:9090/api/v1/otlp/v1/metrics
    tls:
      insecure: true

  # # Data sources: metrics
  # prometheusremotewrite:
  #   endpoint: http://prometheus:9090/api/v1/write
  #   # tls:
  #   #   insecure: true

  # prometheus:
  #   endpoint: otel-collector:8889


extensions:
  health_check:
    endpoint: otel-collector:13133


processors:
  batch:

  tail_sampling/traces-health-checks:
    decision_wait: 2s # Maximum time to take a decision (Affact the latency of the trace)
    num_traces: 500
    expected_new_traces_per_sec: 250
    policies:
    - name: policy-traces-health-checks
      type: string_attribute
      string_attribute:
        key: http.route
        values:
        - /healthz/startup
        - /healthz/live
        - /healthz/ready
        invert_match: true

  # # Filter HTTP spans to server for `GET /health`
  # # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
  # filter/exclude-traces-health:
  #   error_mode: ignore
  #   traces:
  #     span:
  #       - 'attributes["http.route"] == "/healthz/startup"'
  #       - 'attributes["http.route"] == "/healthz/live"'
  #       - 'attributes["http.route"] == "/healthz/ready"'

  # Filter logs for `GET /health`
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/filterprocessor
  # filter/exclude-health-logs-api:
  #   error_mode: ignore
  #   logs:
  #     exclude:
  #       match_type: regexp
  #       bodies:
  #         - '.*Health check API invoked!.*'



service:
  extensions: [health_check]

  pipelines:
    traces:
      receivers: [otlp]
      processors: [tail_sampling/traces-health-checks]
      exporters: [otlp/tempo, otlp/oteltui]
    logs:
      receivers: [otlp]
      exporters: [otlphttp/loki, otlp/oteltui]
    metrics:
      receivers: [otlp]
      exporters: [otlphttp/prometheus, otlp/oteltui]

  telemetry:
    metrics:
      address: 0.0.0.0:8888
      level: detailed
