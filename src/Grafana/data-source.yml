apiVersion: 1

datasources:

  - name: Prometheus
    type: prometheus
    uid: prometheus-uid
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    readOnly: false
    jsonData:
      httpMethod: GET


  # https://grafana.com/docs/grafana/next/datasources/tempo/configure-tempo-data-source/#provision-the-data-source
  - name: Tempo
    type: tempo
    uid: tempo-uid
    access: proxy
    url: http://tempo:3200
    isDefault: false
    readOnly: false
    jsonData:
      httpMethod: GET
      tracesToLogsV2:
        datasourceUid: loki-uid
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: true
        customQuery: false
        #query: 'method="$${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: prometheus-uid
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      tracesToProfiles:
        datasourceUid: pyroscope-uid
        customQuery: false
        profileTypeId: wall:cpu:nanoseconds:cpu:nanoseconds
        # tags:
        #   - key: "host.name"
        #     value: "hostname"
      serviceMap:
        datasourceUid: prometheus-uid
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
      spanBar:
        type: 'Tag'
        tag: 'http.path'


  - name: Loki
    type: loki
    uid: loki-uid
    access: proxy
    url: http://loki:3100
    isDefault: false
    readOnly: false
    jsonData:
      derivedFields:
      - datasourceUid: tempo-uid # To link traceId to Tempo
        matcherRegex: trace_id
        matcherType: label
        name: trace_id
        url: $${__value.raw}


  - name: Alertmanager
    type: alertmanager
    uid: alertmanager-uid
    access: proxy
    url: alertmanager:9093
    isDefault: false
    readOnly: false
    jsonData:
      implementation: prometheus
      handleGrafanaManagedAlerts: true # Alertmanager will handle alerts created by Grafana


  - name: Pyroscope
    type: grafana-pyroscope-datasource
    uid: pyroscope-uid
    access: proxy
    url: http://pyroscope:4040
    isDefault: false
    readOnly: false
    jsonData:
      minStep: '15s'
