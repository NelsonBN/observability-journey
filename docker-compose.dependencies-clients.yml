networks:
  demo:
    driver: bridge

services:

  postgres:
    extends:
      file: docker-compose.dependencies.yml
      service: postgres

  pgweb:
    image: sosedoff/pgweb:0.16.2
    container_name: pgweb
    restart: always
    ports:
      - 8082:8081
    environment:
      - PGWEB_DATABASE_URL=postgres://demouser:a123456789@postgres:5432/demodb?sslmode=disable
    networks:
      - demo
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8081"
        ]
      interval: 30s
      timeout: 10s
      retries: 5


  mongodb:
    extends:
      file: docker-compose.dependencies.yml
      service: mongodb

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: guest
      ME_CONFIG_BASICAUTH_PASSWORD: guest
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
    networks:
      - demo
    depends_on:
      - mongodb


  redis:
    extends:
      file: docker-compose.dependencies.yml
      service: redis

  redis-insight:
    image: redislabs/redisinsight:2.60.0
    container_name: redis-insight
    restart: always
    ports:
      - 5540:5540
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - demo
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5540/api/health", "||", "exit 1"]
      interval: 10s
      timeout: 5s
      start_period: 3s
      retries: 5
